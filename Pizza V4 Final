# Pizza Ordering Program

# Menu of pizzas: number, (name, price)
MENU = {
    "1": ("Cheese", 7.0),
    "2": ("Pepperoni", 8.0),
    "3": ("Hawaiian", 10.0),
    "4": ("Margherita", 6.0),
    "5": ("Ham", 8.0),
    "6": ("Veggie Delight", 9.0),
    "7": ("BBQ Chicken", 11.0),
    "8": ("Meat Lovers", 12.0),
    "9": ("Supreme", 13.0),
    "10": ("Pesto Special", 10.0)
}

# Extras menu with prices
EXTRAS = {
    "1": ("Extra Cheese", 1.0),
    "2": ("Mushrooms", 0.5),
    "3": ("Olives", 0.5),
    "4": ("Pepperoni", 1.5)
}

MAX_PIZZAS = 5        # limit of pizzas per order
DELIVERY_FEE = 3.0    # delivery cost


# This function asks customer details
# It checks that name is not blank, phone is valid, and if delivery it asks for address
def get_customer_details():
    name = input("Enter your name: ").strip().title()
    while name == "":
        print("Name cannot be blank.")
        name = input("Enter your name: ").strip().title()

    phone = input("Enter your phone number: ").strip()
    while phone == "" or not all(c.isdigit() or c in " -+" for c in phone):
        print("Phone number can only have numbers, spaces, dashes or + sign.")
        phone = input("Enter your phone number: ").strip()

    order_type = input("Pickup or Delivery? ").strip().lower()
    while order_type not in ["pickup", "delivery"]:
        print("Please type 'pickup' or 'delivery'")
        order_type = input("Pickup or Delivery? ").strip().lower()

    address = ""
    if order_type == "delivery":
        address = input("Enter your delivery address: ").strip()
        while address == "":
            print("Address cannot be blank.")
            address = input("Enter your delivery address: ").strip()

    return {"name": name, "phone": phone, "type": order_type, "address": address}


# This function lets customer pick pizzas and extras
# It checks that order is not more than 5 pizzas
def take_order():
    order = {}
    total_pizzas = 0

    while total_pizzas < MAX_PIZZAS:
        print("\n---- MENU ----")
        for num, (flavour, price) in MENU.items():
            print(f"{num}. {flavour} - ${price:.2f}")

        choice = input("Enter pizza number: ").strip()
        if choice not in MENU:
            print("Invalid choice, pick a number from the menu.")
            continue

        flavour, price = MENU[choice]

        # ask how many pizzas of this type
        while True:
            qty_str = input(f"How many {flavour}? ")
            try:
                qty = int(qty_str)
                if qty <= 0:
                    print("Quantity must be at least 1.")
                elif total_pizzas + qty > MAX_PIZZAS:
                    print(f"You can only order {MAX_PIZZAS} pizzas in total.")
                else:
                    break
            except ValueError:
                # stops program crashing if user types letters
                print("Enter a valid number (1,2,3).")

        # ask for extras
        extras_chosen = []
        print("Optional extras:")
        for num, (extra, price_extra) in EXTRAS.items():
            print(f"{num}. {extra} - ${price_extra:.2f}")
        add_extra = input("Do you want extras for this pizza? (yes/no) ").strip().lower()
        if add_extra == "yes":
            while True:
                extra_choice = input("Enter extra number (or 'done' to finish): ").strip()
                if extra_choice.lower() == "done":
                    break
                if extra_choice in EXTRAS:
                    extras_chosen.append(EXTRAS[extra_choice])
                    print(f"{EXTRAS[extra_choice][0]} added.")
                else:
                    print("Invalid extra number.")

        # save the order with flavour, extras and qty
        order[(flavour, tuple(extras_chosen))] = order.get((flavour, tuple(extras_chosen)), 0) + qty
        total_pizzas += qty

        if total_pizzas >= MAX_PIZZAS:
            print(f"You have reached the maximum of {MAX_PIZZAS} pizzas.")
            break

        more = input("Anything else? (yes/no) ").strip().lower()
        if more == "no":
            break

    return order


# This function works out the total price
# It adds pizza base price, extras and delivery if needed
def calculate_total(order, order_type):
    total = 0
    for (flavour, extras), qty in order.items():
        # get base pizza price
        price = MENU[[k for k,v in MENU.items() if v[0]==flavour][0]][1]
        # add extras
        for extra, price_extra in extras:
            price += price_extra
        total += price * qty

    if order_type == "delivery":
        total += DELIVERY_FEE

    return total


# This function prints the receipt
# Shows customer details, items, extras and total cost
def print_receipt(customer_info, order, total):
    print("\n----- RECEIPT -----")
    print("Customer:", customer_info['name'])
    print("Phone:", customer_info['phone'])
    if customer_info["type"] == "delivery":
        print("Address:", customer_info['address'])
        print(f"Delivery Fee: ${DELIVERY_FEE:.2f}")
    else:
        print("Pickup Order")

    print("\nItems Ordered:")
    for (flavour, extras), qty in order.items():
        extras_names = ", ".join([extra for extra, _ in extras])
        extras_display = f" (+{extras_names})" if extras_names else ""
        # base price + extras
        price = MENU[[k for k,v in MENU.items() if v[0]==flavour][0]][1]
        for _, price_extra in extras:
            price += price_extra
        print(f"{qty} x {flavour}{extras_display} - ${price*qty:.2f}")

    print(f"\nTOTAL: ${total:.2f}")
    print("-------------------")
    print("Thank you for ordering from Python Pizza!")


# Main program keeps running until user wants to stop
def main():
    while True:
        customer_info = get_customer_details()
        order = take_order()

        if not order:
            print("No pizzas ordered. Exiting.")
            return

        total = calculate_total(order, customer_info["type"])

        print("\nPlease review your order:")
        print_receipt(customer_info, order, total)

        confirm = input("Confirm order? (yes/no) ").strip().lower()
        if confirm == "yes":
            print("Order confirmed!")
        else:
            print("Order cancelled.")

        new_order = input("\nWould you like to take another order? (yes/no) ").strip().lower()
        if new_order != "yes":
            print("Closing program. Goodbye!")
            break


# run the program
main()
